{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","props","useState","inputValue","setInputValue","setCategorias","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAACC,GAAW,IAAD,EAEEC,mBAAS,OAFX,mBAE3BC,EAF2B,KAEfC,EAFe,KAI3BC,EAAiBJ,EAAjBI,cAeP,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAS,IAC3BL,GAAc,SAAAM,GAAI,OAAKR,GAAL,mBAAoBQ,OACtCP,EAAc,MAMlB,SACI,uBACIQ,KAAK,OACLC,MAAQV,EACRW,SAnBc,SAACP,GACvBH,EAAeG,EAAEQ,OAAOF,a,+BCVnBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCHCO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECDd,SAAEA,GAAgB,IAAD,EAEff,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAmBzC,OAZAC,qBAAW,WAEPxB,EAASC,GACRwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAACpB,IAEGqB,EDfwBK,CAAc1B,GAAjCa,EAH0B,EAG/BN,KAAaa,EAHkB,EAGlBA,QAGpB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAgB,GAEZ,OAAO,cAAC,EAAD,eAA+BA,GAAbA,EAAKd,aEWnCgB,EA3Ba,WAAO,IAAD,EAEM1C,mBAAS,CAAC,QAFhB,mBAEvB2C,EAFuB,KAEXxC,EAFW,KAU9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQwC,EAAWnB,KAAK,SAAAT,GAChB,OAAO,cAAC,EAAD,CAAyBA,UAAWA,GAAtBA,Y,MClBzC6B,IAASC,OACL,cAAE,EAAF,IACFC,SAASC,eAAe,W","file":"static/js/main.a1a2db04.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = (props) => {\r\n\r\n    const [inputValue, setInputValue] = useState('tom');\r\n\r\n    const {setCategorias} = props;\r\n\r\n    const handleinputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => { // Esta funcion se ejecuta cuando damos un enter\r\n        e.preventDefault(); // para no recargar toda la pagina\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategorias(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleinputChange }\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategorias : PropTypes.func.isRequired\r\n}","export const getGifs = async(categoria) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=L4ngvh903W9t5sBFjAk1us2MQbjTDm1D`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {categoria} ) => {\r\n\r\n\r\n    const {data:images, loading} = useFetchGifs( categoria );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'> {categoria} </h3>\r\n\r\n            { loading && <p className='animate__animated animate__flash'>Loading</p> }\r\n            \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( imgs => {\r\n                    //return <GifGridItem key={images.id} images = {images}/>\r\n                    return <GifGridItem key={imgs.id} {...imgs} />\r\n                    })\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( categoria )\r\n        .then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n        \r\n    }, [categoria])\r\n\r\n    return state; // {data:[], loading:true}\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['tom']);\r\n\r\n    /*const handleAdd = () => {\r\n        //setCategorias([...categorias, 'Hola']);\r\n        setCategorias(cats => [...cats, 'Hola']);\r\n    }*/\r\n\r\n\r\n    return( \r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias} />\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categorias.map( categoria => {\r\n                    return <GifGrid key={categoria} categoria={categoria} /> \r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    < GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}